#include <fstream>
#include <iostream>
#include <nlohmann/json.hpp>
#include <curl/curl.h>
using json = nlohmann::json;


static size_t WriteCallback(void *contents, size_t size, size_t nmemb, void *userp)
{
    ((std::string*)userp)->append((char*)contents, size * nmemb);
    return size * nmemb;
}

int main (int argc, char *argv[]) {

  CURL *curl;
  CURLcode res;
  std::string responseBuffer;

  std::cout << "Hej";

  std::string str_url = "wttr.in/Detroit?format=j1";
  
  if(!curl) {
    std::cout << "CURL not initialized!" << std::endl;
    return -1;
  }
  curl_easy_setopt(curl, CURLOPT_URL, str_url.c_str());
  curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, WriteCallback);
  curl_easy_setopt(curl, CURLOPT_WRITEDATA, &responseBuffer);

  std::cout << "setopt works!!";
  res = curl_easy_perform(curl);
  if(res != CURLE_OK) {
      std::cerr << "Failed to perform curl request: " << curl_easy_strerror(res) << std::endl;
  } else {
      std::cout << "Response received: " << std::endl;
      std::cout << responseBuffer << std::endl;
  }

  curl_easy_cleanup(curl);

  curl_global_cleanup();
  return 0;
}
